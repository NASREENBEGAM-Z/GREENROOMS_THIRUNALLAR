// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  slug            String    @unique
  description     String
  shortDescription String
  price           Decimal   @db.Decimal(10, 2)
  capacity        Json      // { adults: 2, children: 2 }
  amenities       String[]  // Array of amenities
  images          Json      // Array of image objects
  features        String[]
  size            String?
  bedType         String?
  isAvailable     Boolean   @default(true)
  isFeatured      Boolean   @default(false)
  seoTitle        String?
  seoDescription  String?
  seoKeywords     String[]
  viewCount       Int       @default(0)
  bookingCount    Int       @default(0)
  averageRating   Decimal   @default(0) @db.Decimal(3, 2)
  reviewCount     Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  bookings        Booking[]

  @@map("rooms")
}

model Booking {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String
  phone      String
  address    String?
  note       String?
  checkIn    DateTime
  checkOut   DateTime
  adults     Int
  children   Int
  roomData   Json     // Store room object as JSON
  totalPrice Decimal  @db.Decimal(10, 2)
  status     String   @default("pending") // pending, confirmed, cancelled, completed
  adminReply String?  // Admin's reply to the booking
  adminNotes String?  // Internal admin notes
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  roomId     Int?
  room       Room?    @relation(fields: [roomId], references: [id])

  @@map("bookings")
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin") // admin, super_admin
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  status    String   @default("unread") // unread, read, replied
  adminReply String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model Review {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  rating    Int      // 1-5 stars
  comment   String
  isApproved Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
} 